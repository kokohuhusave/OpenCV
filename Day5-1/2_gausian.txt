✅ 코드해석 및 결과해석

    이 코드는 OpenCV를 사용하여 'dog.bmp' 이미지를 로드하고 가우시안 블러와 평균 블러를 적용하여 결과를 출력하는 예제입니다.

    1. `cv2.imread('./dog.bmp', cv2.IMREAD_GRAYSCALE)`: 'dog.bmp' 파일을 그레이스케일로 읽어서 `img` 변수에 저장합니다.
    `cv2.IMREAD_GRAYSCALE` 옵션을 사용하여 이미지를 흑백(그레이스케일)로 읽습니다.

    2. `cv2.GaussianBlur(img, (0, 0), 3)`: `img`에 가우시안 블러를 적용하여 `dst1`에 저장합니다. 가우시안 블러는 이미지를
    흐리게 만들기 위해 가우시안 커널을 적용하는데, `(0, 0)`은 커널의 크기를 자동으로 계산하도록 하고, `3`은 가우시안 커널의 표준 편차를 의미합니다.
    이로 인해 이미지가 흐려지게 됩니다.

    3. `cv2.blur(img, (5, 5))`: `img`에 평균 블러를 적용하여 `dst2`에 저장합니다. 평균 블러는 커널 내 모든 픽셀의 평균 값을
    중심 픽셀의 값으로 설정하여 흐림 효과를 주는데, `(5, 5)`는 커널의 크기를 (5, 5)로 설정합니다.

    4. `cv2.imshow('dst1', dst1)`: `dst1` 이미지를 'dst1'이라는 창에 표시합니다. 이 때, 'dst1' 창에는 가우시안 블러가 적용된 그레이스케일 이미지가 표시됩니다.

    5. `cv2.imshow('dst2', dst2)`: `dst2` 이미지를 'dst2'라는 창에 표시합니다. 이 때, 'dst2' 창에는 평균 블러가 적용된 그레이스케일 이미지가 표시됩니다.

    6. `cv2.waitKey()`: `cv2.imshow()` 함수로 보여진 이미지들이 화면에서 유지되도록 기다립니다. 아무 키나 누를 때까지 기다립니다.

    코드 실행 결과를 해석하면:

    1. `dst1`: 가우시안 블러가 적용된 이미지로, 이미지가 흐려지고 부드러워집니다. 가우시안 블러는 주로 노이즈를 감소시키고 이미지를 부드럽게 처리하는데 사용됩니다.

    2. `dst2`: 평균 블러가 적용된 이미지로, 이미지의 세부 사항이 더욱 흐려집니다. 평균 블러는 가우시안 블러와 비슷하지만 블러 효과가 더 강하고 부드러워집니다.

    따라서 이 코드는 가우시안 블러와 평균 블러를 사용하여 이미지를 다른 방식으로 흐리게 처리하고 결과를 확인하는 예제입니다.